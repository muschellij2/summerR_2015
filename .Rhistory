rmarkdown::render('index.Rmd')
setwd(:..)
setwd("..")
rmarkdown::render('index.Rmd')
load("C:/Users/Andrew/Documents/Lieber/Research/GitHub/summerR_2015/data/charmcirc.rda")
circ[155,]
head(circ2)
dim
table(complete.cases(circ2)
)
?c
year=c(1999,1999,2000,2001)
head(year)
unique(year)
?mean
x = c(1,4,7,6,4,12,9,3)
sort(x)
x[order(x)]
order(x)
x = cut(circ$daily, c(0,10000,20000, 50000))
head(x)
table(x)
cc = factor(c("case","case","case",
"control","control","control"))
cc
relevel(cc, ref="control")
x = 1:100
cx = cut(x, breaks=c(10,25,50), labels=FALSE)
table(cx, useNA = "always")
table(cx[15:50], useNA = "always")
table(cx[15:50], useNA = "ifany")
table(cx[15:50])
table(cx)
?quantile
x
quantile(x)
cut(x, quantile(x))
cut(x, quantile(x), include.lowest = TRUE)
table(cut(x, quantile(x), include.lowest = TRUE))
table(cut(x, quantile(x,prob=c(0,33,66,100)), include.lowest = TRUE))
table(cut(x, quantile(x,prob=c(0,.33,.66,1)), include.lowest = TRUE))
source("http://bioconductor.org/biocLite.R")
biocLite("Biostrings")
plot(0, 0)
x = 5
x
x <- 5
x
x = 5
2 + 2
x = 5
2 + 2
x = 5
2 + 2
x = 5
x + 4
.libPaths()
library(lme4)
help(package = "lme4")
install.packages("lme4")
library(lme4)
help(package = "lme4")
help(topic = "lm")
?lm
help("lm")
help(topic = "-")
?-
"hey
"
print("I'm code")
"I'm code"
x
x = 5
myxvar = 5
myxvar <-  5
5 = myvar
myxvar <-  5
one_to_5 = 1:5
one_to_5
one_to_5 = c(1, 2, 3,4, 5)
one_to_5
2 + 3 * 5
(2 + 3) * 5
X = 4
x
X
my.x = 4
my_x =5
my's_x
x <- 5
x < -5
x <-                     5
x
x <-
100
x <- "hey last x was
100""
100"
x <- "hey last x was
100 "
x
x <- "hey last x was 100"
x
mod = lm(rnorm(100) ~ rnorm(100))
mod
coef(mod)
y = rnorm(100)
x = rnorm(100)
plot(x, y)
mod = lm(y ~ x)
mod
coef(mod)
c_mod = coef(mod)
dat <- read.csv("~/Downloads/Charm_City_Circulator_Ridership.csv")
View(dat)
?read.csv
dat
dim(dat)
nrow(dat)
ncol(dat)
head(dat)
tail(dat)
table(dat$day)
class(dat)
?read.csv
dat_monday = dat[ dat$day == "Monday", ]
head(dat_monday)
dat_monday = dat[ dat$day == "Monday", ]
library(dplyr)
dat_monday = filter(dat, day == "Monday")
head(dat_monday)
dat_monday = filter(dat, dayer == "Monday")
dat_monday = dat[ dat$dayer == "Monday", ]
dat_monday
summary(cars)
cars
