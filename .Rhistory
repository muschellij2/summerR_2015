rmarkdown::render('index.Rmd')
setwd(:..)
setwd("..")
rmarkdown::render('index.Rmd')
load("C:/Users/Andrew/Documents/Lieber/Research/GitHub/summerR_2015/data/charmcirc.rda")
circ[155,]
head(circ2)
dim
table(complete.cases(circ2)
)
?c
year=c(1999,1999,2000,2001)
head(year)
unique(year)
?mean
x = c(1,4,7,6,4,12,9,3)
sort(x)
x[order(x)]
order(x)
x = cut(circ$daily, c(0,10000,20000, 50000))
head(x)
table(x)
cc = factor(c("case","case","case",
"control","control","control"))
cc
relevel(cc, ref="control")
x = 1:100
cx = cut(x, breaks=c(10,25,50), labels=FALSE)
table(cx, useNA = "always")
table(cx[15:50], useNA = "always")
table(cx[15:50], useNA = "ifany")
table(cx[15:50])
table(cx)
?quantile
x
quantile(x)
cut(x, quantile(x))
cut(x, quantile(x), include.lowest = TRUE)
table(cut(x, quantile(x), include.lowest = TRUE))
table(cut(x, quantile(x,prob=c(0,33,66,100)), include.lowest = TRUE))
table(cut(x, quantile(x,prob=c(0,.33,.66,1)), include.lowest = TRUE))
source("http://bioconductor.org/biocLite.R")
biocLite("Biostrings")
plot(0, 0)
x = 5
x
x <- 5
x
x = 5
2 + 2
x = 5
2 + 2
x = 5
2 + 2
x = 5
x + 4
.libPaths()
library(lme4)
help(package = "lme4")
install.packages("lme4")
library(lme4)
help(package = "lme4")
help(topic = "lm")
?lm
help("lm")
help(topic = "-")
?-
"hey
"
print("I'm code")
"I'm code"
x
x = 5
myxvar = 5
myxvar <-  5
5 = myvar
myxvar <-  5
one_to_5 = 1:5
one_to_5
one_to_5 = c(1, 2, 3,4, 5)
one_to_5
2 + 3 * 5
(2 + 3) * 5
X = 4
x
X
my.x = 4
my_x =5
my's_x
x <- 5
x < -5
x <-                     5
x
x <-
100
x <- "hey last x was
100""
100"
x <- "hey last x was
100 "
x
x <- "hey last x was 100"
x
mod = lm(rnorm(100) ~ rnorm(100))
mod
coef(mod)
y = rnorm(100)
x = rnorm(100)
plot(x, y)
mod = lm(y ~ x)
mod
coef(mod)
c_mod = coef(mod)
dat <- read.csv("~/Downloads/Charm_City_Circulator_Ridership.csv")
View(dat)
?read.csv
dat
dim(dat)
nrow(dat)
ncol(dat)
head(dat)
tail(dat)
table(dat$day)
class(dat)
?read.csv
dat_monday = dat[ dat$day == "Monday", ]
head(dat_monday)
dat_monday = dat[ dat$day == "Monday", ]
library(dplyr)
dat_monday = filter(dat, day == "Monday")
head(dat_monday)
dat_monday = filter(dat, dayer == "Monday")
dat_monday = dat[ dat$dayer == "Monday", ]
dat_monday
summary(cars)
cars
?read.csv
read.csv(header = FALSE, "data/Baltimore_City_Employee_Salaries_FY2014.csv")
read.csv(FALSE, "data/Baltimore_City_Employee_Salaries_FY2014.csv")
read.csv(FALSE, file = "data/Baltimore_City_Employee_Salaries_FY2014.csv")
head(read.csv(FALSE, file = "data/Baltimore_City_Employee_Salaries_FY2014.csv"))
?read.csv
?subset
?read.svs
??read
??subset
(3+5) * 6
?c
x = 5
class(x)
y = 1:10
x * y
class(y)
class(x)
x = 5
x
x == 5
x == (2.9 + 2.1)
x == (2.9999999999999999999999999999999999 + 2)
9999999999999999999999999999999999
TRUE + 1
TRUE * 1
TRUE * TRUE
sex = sample(c("Male", "Female"), 100, replace = TRUE)
sex
class(sex)
class(sex == "Male")
sex == "Male"
sum(sex == "Male")
table(sex)
5 < 4
5 > 4
5 >= 4
5 == 4
is.nan(x)
is.nan(y)
y
y[5]/0
y[5] = y[5]/0
y[6] = 0/0
y
y == x
y = 1:210
y = 1:10
y == x
y
x
x = c(5, 10)
y == x
x = c(5, 10, 8)
y == x
length(x)
length(y)
x2 = c(10, 5)
x = c(5, 10)
y == x
y == x2
y %in% x2
y %in% c(3, 6, 9)
y %in% c(3, 6, 10)
df = data.frame(age = y, gender = sample(c("M", "F"), length(y), replace = TRUE))
head(df)
df$age %in% c(3, 6, 10)
subset(df, age %in% c(3, 6, 10))
df = data.frame(age = rep(y, 3), gender = sample(c("M", "F"), length(y)*3, replace = TRUE))
df
subset(df, age %in% c(3, 6, 10))
subset(df, age == c(3, 6, 10))
subset(df, age == 3 | age == 6 | age == 10)
subset(df, age %in% c(3, 6, 10))
subset(df, age == c(3, 6, 10) & gender == "M")
subset(df, age %in% c(3, 6, 10) & gender == "M")
males_young = subset(df, age %in% c(3, 6, 10) & gender == "M")
class(males_young)
write.csv(df, file = "~/Desktop/test.csv")
write.csv(df, file = "~/Desktop/test.csv", row.names = FALSE)
y
length(y)
class(df)
length(df)
nrow(df)
ncol(df)
dim(df)
nrow(y)
nrow(x)
ncol(y)
dim(y)
x = "5"
x
x + 4
class(x)
as.numeric(x)
as.character(5)
x
as.logical(x)
x
x = "TRUE"
as.logical(x)
class(df$age)
class(df$gender)
df$gender
?factor
levels(df$gender)
table(df$gender)
df$sex2 = factor(df$gender, levels = c("M", "F"))
table(df$sex2)
table(as.character(df$gender))
table(as.character(df$sex2))
class(df$sex2)
mat = matrix(rnorm(9), ncol=3, nrow=3)
mat
mat = matrix(rnorm(9), ncol=3, nrow=4)
mat = matrix(rnorm(12), ncol=3, nrow=4)
mat
as.data.frame(mat)
df
c("5", "6", "balloon", "7")
r = c("5", "6", "balloon", "7")
r
as.numeric(r)
mat
cbind(mat, c("1", "2", "3", "4"))
mat2 =cbind(mat, c("1", "2", "3", "4"))
mat2
cbind(mat2, c(1,2, 3, 4))
head(df)
View(df)
nrow(df)
df2 = cbind(df, height = rnorm(30, mean = 40, sd = 5))
head(df2)
class(df2$height)
df2 = cbind(df, height = rnorm(30, mean = 40, sd = 5), blah = rep(c("hey", "ho"), length=30))
head(df2)
class(df2$blah)
head(rep(c("hey", "ho"), length=30))
?rep
?cbind
mat
df2$gender
class(df2$gender)
mat[, 2]
mat[2, ]
df[, 1]
df[1, ]
class(df[, 1])
class(df[1, ])
subset(df, age %in% c(3, 6, 10))
df[ df$age %in% c(3, 6, 10), ]
df[ age %in% c(3, 6, 10), ]
subset(df, df$age %in% c(3, 6, 10))
my_log_index = df$age %in% c(3, 6, 10)
my_log_index
subset(df, my_log_index)
df[ my_log_index, ]
df$my_log_index = rep(FALSE, 30)
head9df
head(df)
subset(df, my_log_index)
df[ my_log_index, ]
age
subset(df, my_log_index)
df[ df$my_log_index, ]
df[ my_log_index, ]
df$x = TRUE
head(df)
x = df$age == 3
x
subset(df, x)
head(df)
df[ df$age == 3, "sex2"]
df$sex2[ df$age == 3]
df$sex2
df$sex2[5]
df$sex2[ df$age == 3]
df$gen = c(rep("MALE", 5), rep("M", 5), rep("FEMale", 10), rep("F", 10))
df$gen
unique(df$gen)
table(df$gen)
table(df$gen, df$age)
tab = table(df$gen, df$age)
fisher.test(tab)
chisq.test(tab)
table(df$gender, df$x  > 40)
table(df$gender, df$x  > 30)
head(df)
head(df2)
table(df$gender, df$height  > 35)
table(df2$gender, df2$height  > 35)
table(df2$gender, df2$height  > 38)
tab = table(df2$gender, df2$height  > 38)
tab
class(tab)
fisher.test(tab)
chisq.test(tab)
prop.table(tab)
prop.table(tab)
tab
sum(tab)
tab/sum(tab)
prop.table(tab, margin = 1)
prop.table(tab, margin = 2)
str(df)
1:5
seq(from = 1, to = 5)
seq(from = 1, to = 5, by = 2)
seq(from = 1, to = 5, by = 4)
seq(from = 1, to = 5, by = 8)
seq(from = 1, to = 5, by = 2.5)
seq(from = 1, to = 5)
1:5
-1:5
-(1:5)
seq(from = -1, to = 5)
seq(from = -1, to = -5)
df[3, 5]
df[c(3, 5), ]
df[c(3, 5), 1]
df[c(3, 5), c(1, 4)]
df$sex2
df[, "sex2"]
df[, c("age", "sex2")]
head(df[, c("age", "sex2")])
head(df[, c("sex2", "age")])
x = cbind(rnorm(20), rnorm(20), rnorm(20))
x = cbind(rnorm(20), rnorm(20), rnorm(20))
dist(x)
x = cbind(rnorm(20), rnorm(20), rnorm(20))
dx = dist(x)
cm = colMeans(x)
cm
x = cbind(rnorm(20), rnorm(20), rnorm(20))
dx = dist(x)
cm = colMeans(x)
xc = t(t(x) - cm)
dist(dx)
x = cbind(rnorm(20), rnorm(20), rnorm(20))
dx = dist(x)
cm = colMeans(x)
xc = t(t(x) - cm)
dxc = dist(xc)
dxc - dx
