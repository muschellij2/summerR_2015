log2(6000)
log2(1000)
log2(500)
log2(250)
20000*.01
420/360
662*383/20000
662*383/15000
log(11.14)
log(1.295)
log(5.821)
log(11.14)
log(11.14)-log(1.295)
exp(log(11.14)+(log(11.14)-log(1.295)))
2^-0.19
2^0.19
2^0.07
2^0.005
source('~/Lieber/Research/Papers/Lisa/explore_survey_data_aj.R')
setwd("C:/Users/Andrew/Downloads")
mon = read.table("Monuments.csv",sep=",")
mon = read.csv("Monuments.csv")
read.csv()
read.csv
mon <- read.csv("C:/Users/Andrew/Downloads/Monuments.csv", stringsAsFactors=FALSE)
View(mon)
str(mon)
getwd()
setwd("C:\Users/Andrew/Documents/GitHub/")
setwd("C:/Users/Andrew/Documents/GitHub/")
setwd("~/Lieber/Research/GitHub/summerR_2015")
setwd("~")
getwd()
Index = (mon$zipCode == 21202)
Index
head(mon$zipCode)
table(Index)
sum(Index)
mon2 = mon[Index,]
mon3 = mon[Index,1:3]
head(mon3)
Index
which(Index)
mon[which(Index),]
is.data.frame(mon)
is.character(mon)
x = 1:5
x
is.na(x)
x2 = c(1,4,5,7,NA,8)
x2
is.na(x2)
x2[is.na(x2)]
is.na(x2)
!is.na(x2)
x2[!is.na(x2)]
mean(x2)
x2
mean(x2, na.rm=TRUE)
dum(x2, na.rm=TRUE)
sum(x2, na.rm=TRUE)
x
x=c(x,-999)
x
mean(x)
x==-999
x[x==-999]
x[x==-999] = NA
x
nam = table(mon$name)
nam[nam>1]
mon[mon$name %in% names(nam[nam>1]),]
monDt = mon[mon$neighborhood=="Downtown",]
length(unique(monDt$zipCode))
length(unique(monHh$zipCode))
monHh = mon[mon$neighborhood=="Johns Hopkins Homewood"]
length(unique(monHh$zipCode))
monHh = mon[mon$neighborhood=="Johns Hopkins Homewood",]
length(unique(monHh$zipCode))
mon <- read.csv("C:/Users/Andrew/Downloads/Monuments.csv",
as.is=TRUE=FALSE, na.string="")
mon <- read.csv("C:/Users/Andrew/Downloads/Monuments.csv",
as.is=TRUE, na.string="")
head(mon)
table(is.na(mon$Location.1))
names(mon)[6] = "location"
table(is.na(mon$location))
tab = table(mon$zipCode, mon$neighborhood)
tab
dim(tab)
tab[1:5,1:5]
table(mon$zipCode, mon$neighborhood, mon$councilDistrict)
head(table(mon$zipCode, mon$neighborhood, mon$councilDistrict))
table(mon$zipCode, mon$neighborhood, mon$councilDistrict)
dim(table(mon$zipCode, mon$neighborhood, mon$councilDistrict))
table(mon$zipCode[mon$neighborhood=="Downtown"])
table(mon$zipCode[mon$neighborhood==
"Johns Hopkins Homewood"])
mon <- read.csv("C:/Users/Andrew/Downloads/Monuments.csv", stringsAsFactors=FALSE)
head(mon$Location.1)
mon <- read.csv("C:/Users/Andrew/Downloads/Monuments.csv",
as.is=TRUE, na.string="")
head(mon$Location.1)
table(is.na(mon$location))
names(mon)[6] = "location"
table(is.na(mon$location))
table(!is.na(mon$location))
library("foreign", lib.loc="C:/Program Files/R/R-3.2.0/library")
library(xlsx)
install.packages("xlsx")
library(xlsx)
?read.xlsx
tab <- table(c(0, 1, 2, 3, 2, 3, 3, 2,2, 3),
c(0, 1, 2, 3, 2, 3, 3, 4, 4, 3),
useNA="always")
tab
margin.table(tab, 2)
margin.table(tab, 1)
colSums(tab)
setwd("~/Lieber/Research/GitHub/summerR_2015/labs")
Sal = read.csv("../data/Baltimore_City_Employee_Salaries_FY2014.csv",as.is=TRUE)
head(is.na(Sal$Name))
sum(is.na(Sal$Name))
any(is.na(Sal$Name))
all(!is.na(Sal$Name))
head(Sal)
head(Sal$AnnualSalary)
head(sort(Sal$AnnualSalary))
head(sort(Sal$AnnualSalary, decreasing=TRUE))
sort(as.numeric(c("1", "2", "10"))
)
head(sort(as.numeric(Sal$AnnualSalary)))
toupper(c("astcT"))
tolower(c("astcT"))
library(stringr)
x = c("boy", "boy", "boy ")
x
table(x)
table(str_trim(x))
length(x[1])
nchar(x[1])
x = c("abcdef")
x
substr(x, 2,4)
letter
letters
LETTERS
base <- data.frame(id=1:10, Age= seq(55,60, length=10))
visits <- data.frame(id=rep(1:8, 3), visit= rep(1:3, 8),
Outcome= seq(10,50, length=24))
base
head(visits)
head(visits,10)
merged.data <- merge(base, visits, by="id")
merged.data
dim(merged.data)
circ = read.csv("../data/Charm_City_Circulator_Ridership.csv",as.is=TRUE)
circ$date <- as.Date(circ$date, "%m/%d/%Y") # creating a date for sorting
head(circ$date)
class(circ$date)
circ$date[100] - circ$date[50]
as.numeric(circ$date[100] - circ$date[50])
str(circ$date[100] - circ$date[50])
?difftime
difftime(circ$date[100],circ$date[50],units = "sec")
data(Indometh)
head(Indometh)
setwd("..")
rmarkdown::render('index.Rmd')
tax = read.csv("../data/Real_Property_Taxes.csv",
as.is=TRUE)
setwd("modules")
tax = read.csv("../data/Real_Property_Taxes.csv",
as.is=TRUE)
table(tax$resCode)
library(stringr)
tax$resCode = str_trim(tax$resCode)
table(tax$resCode)
# 2. How many addresses pay property taxes?
dim(tax) # ? all homes in dataset
length(unique(tax$propertyAddress)) # those with unique address
length(unique(tax$propertyAddress[
tax$cityTax != "$0.00"]))
# and those that have non-zero city
length(unique(tax$propertyAddress[tax$cityTax != "$0.00" &
tax$stateTax != "$0.00"]))
tax$cityTax = as.numeric(gsub("$","",
tax$cityTax,fixed=TRUE))
tax$stateTax = as.numeric(gsub("$","",
tax$stateTax,fixed=TRUE))
tax$amountDue = as.numeric(gsub("$","",
tax$amountDue,fixed=TRUE))
colSums(tax[,c("cityTax","stateTax")],na.rm=TRUE)
table(is.na(tax$cityTax))
---
